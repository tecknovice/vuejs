{"remainingRequest":"/Users/web1/Desktop/vuejs/todo/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/web1/Desktop/vuejs/todo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/web1/Desktop/vuejs/todo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/web1/Desktop/vuejs/todo/src/App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"/Users/web1/Desktop/vuejs/todo/src/App.vue","mtime":1537178719000},{"path":"/Users/web1/Desktop/vuejs/todo/node_modules/cache-loader/dist/cjs.js","mtime":1537178596000},{"path":"/Users/web1/Desktop/vuejs/todo/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/web1/Desktop/vuejs/todo/node_modules/cache-loader/dist/cjs.js","mtime":1537178596000},{"path":"/Users/web1/Desktop/vuejs/todo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { attrs: { id: \"app\" } }, [\n    _c(\"h4\", { staticClass: \"bg-primary text-white text-center p-2\" }, [\n      _vm._v(\"\\n        \" + _vm._s(_vm.name) + \"'s To Do List\\n    \")\n    ]),\n    _c(\n      \"div\",\n      { staticClass: \"container-fluid p-4\" },\n      [\n        _vm.filteredTasks.length == 0\n          ? _c(\"div\", { staticClass: \"row\" }, [_vm._m(0)])\n          : [\n              _vm._m(1),\n              _vm._l(_vm.filteredTasks, function(t) {\n                return _c(\"div\", { key: t.action, staticClass: \"row\" }, [\n                  _c(\"div\", { staticClass: \"col\" }, [_vm._v(_vm._s(t.action))]),\n                  _c(\"div\", { staticClass: \"col-2 text-center\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: t.done,\n                          expression: \"t.done\"\n                        }\n                      ],\n                      staticClass: \"form-check-input\",\n                      attrs: { type: \"checkbox\" },\n                      domProps: {\n                        checked: Array.isArray(t.done)\n                          ? _vm._i(t.done, null) > -1\n                          : t.done\n                      },\n                      on: {\n                        change: function($event) {\n                          var $$a = t.done,\n                            $$el = $event.target,\n                            $$c = $$el.checked ? true : false\n                          if (Array.isArray($$a)) {\n                            var $$v = null,\n                              $$i = _vm._i($$a, $$v)\n                            if ($$el.checked) {\n                              $$i < 0 && _vm.$set(t, \"done\", $$a.concat([$$v]))\n                            } else {\n                              $$i > -1 &&\n                                _vm.$set(\n                                  t,\n                                  \"done\",\n                                  $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                                )\n                            }\n                          } else {\n                            _vm.$set(t, \"done\", $$c)\n                          }\n                        }\n                      }\n                    })\n                  ])\n                ])\n              })\n            ],\n        _c(\"div\", { staticClass: \"row py-2\" }, [\n          _c(\"div\", { staticClass: \"col\" }, [\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.newItemText,\n                  expression: \"newItemText\"\n                }\n              ],\n              staticClass: \"form-control\",\n              domProps: { value: _vm.newItemText },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.newItemText = $event.target.value\n                }\n              }\n            })\n          ]),\n          _c(\"div\", { staticClass: \"col-2\" }, [\n            _c(\n              \"button\",\n              { staticClass: \"btn btn-primary\", on: { click: _vm.addNewTodo } },\n              [_vm._v(\"Add\")]\n            )\n          ])\n        ]),\n        _c(\"div\", { staticClass: \"row bg-secondary py-2 mt-2 text-white\" }, [\n          _c(\"div\", { staticClass: \"col text-center\" }, [\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.hideCompleted,\n                  expression: \"hideCompleted\"\n                }\n              ],\n              staticClass: \"form-check-input\",\n              attrs: { type: \"checkbox\" },\n              domProps: {\n                checked: Array.isArray(_vm.hideCompleted)\n                  ? _vm._i(_vm.hideCompleted, null) > -1\n                  : _vm.hideCompleted\n              },\n              on: {\n                change: function($event) {\n                  var $$a = _vm.hideCompleted,\n                    $$el = $event.target,\n                    $$c = $$el.checked ? true : false\n                  if (Array.isArray($$a)) {\n                    var $$v = null,\n                      $$i = _vm._i($$a, $$v)\n                    if ($$el.checked) {\n                      $$i < 0 && (_vm.hideCompleted = $$a.concat([$$v]))\n                    } else {\n                      $$i > -1 &&\n                        (_vm.hideCompleted = $$a\n                          .slice(0, $$i)\n                          .concat($$a.slice($$i + 1)))\n                    }\n                  } else {\n                    _vm.hideCompleted = $$c\n                  }\n                }\n              }\n            }),\n            _c(\"label\", { staticClass: \"form-check-label font-weight-bold\" }, [\n              _vm._v(\n                \"\\n                    Hide completed tasks\\n                \"\n              )\n            ])\n          ]),\n          _c(\"div\", { staticClass: \"col text-center\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-sm btn-warning\",\n                on: { click: _vm.deleteCompleted }\n              },\n              [\n                _vm._v(\n                  \"\\n                    Delete Completed\\n                \"\n                )\n              ]\n            )\n          ])\n        ])\n      ],\n      2\n    )\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"col text-center\" }, [\n      _c(\"b\", [_vm._v(\"Nothing to do. Hurrah!\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"row\" }, [\n      _c(\"div\", { staticClass: \"col font-weight-bold\" }, [_vm._v(\"Task\")]),\n      _c(\"div\", { staticClass: \"col-2 font-weight-bold\" }, [_vm._v(\"Done\")])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}